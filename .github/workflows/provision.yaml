name: Provision Droplet

on:
  workflow_dispatch:
    inputs:
      droplet_name:
        description: "Name of the droplet"
        required: true
        default: "my-vps"
      size:
        description: "Droplet size (e.g. s-1vcpu-512mb-10gb)"
        required: true
        default: "s-1vcpu-512mb-10gb"
      image:
        description: "Image slug (e.g. ubuntu-22-04-x64)"
        required: false
        default: "ubuntu-22-04-x64"

jobs:
  provision:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Terraform Init
      run: terraform init
      working-directory: terraform

    - name: Terraform Apply
      run: |
        terraform apply -auto-approve \
          -var="do_token=${{ secrets.DO_TOKEN }}" \
          -var="ssh_key_fingerprint=${{ secrets.SSH_KEY_FINGERPRINT }}" \
          -var="droplet_name=${{ github.event.inputs.droplet_name }}" \
          -var="region=fra1" \
          -var="size=${{ github.event.inputs.size }}" \
          -var="image=${{ github.event.inputs.image }}"
      working-directory: terraform

    - name: Capture Droplet IP
      id: droplet_ip
      run: |
        echo "ip=$(terraform -chdir=terraform output -raw droplet_ip)" >> $GITHUB_OUTPUT

    - name: Harden Droplet via SSH
      run: |
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > id_rsa
        chmod 600 id_rsa

        DROPLET_IP="${{ steps.droplet_ip.outputs.ip }}"
        echo "✅ Using Droplet IP: $DROPLET_IP"

        if [ -z "$DROPLET_IP" ]; then
          echo "❌ ERROR: IP is empty"
          exit 1
        fi

        sleep 10

        ssh -o StrictHostKeyChecking=no -i id_rsa root@"$DROPLET_IP" 'bash -s' < scripts/harden.sh
