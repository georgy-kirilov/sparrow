name: Provision Droplet

on:
  workflow_dispatch:
    inputs:
      droplet_name:
        description: "Name of the droplet"
        required: true
        default: "my-vps"
      size:
        description: "Droplet size (e.g. s-1vcpu-512mb-10gb)"
        required: true
        default: "s-1vcpu-512mb-10gb"
      image:
        description: "Image slug (e.g. ubuntu-22-04-x64)"
        required: false
        default: "ubuntu-22-04-x64"

jobs:
  provision:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init
        working-directory: terraform

      - name: Terraform Apply
        run: |
          terraform apply -auto-approve \
            -var="do_token=${{ secrets.DO_TOKEN }}" \
            -var="ssh_key_fingerprint=${{ secrets.SSH_KEY_FINGERPRINT }}" \
            -var="droplet_name=${{ github.event.inputs.droplet_name }}" \
            -var="size=${{ github.event.inputs.size }}" \
            -var="image=${{ github.event.inputs.image }}"
        working-directory: terraform

      - name: Capture Droplet IP
        id: droplet_ip
        working-directory: terraform
        run: |
          raw_ip=$(terraform output -raw droplet_ip -no-color)
          ip=$(echo "$raw_ip" | grep -Eo '([0-9]{1,3}\.){3}[0-9]{1,3}' | head -n1)
          echo "ip=$ip" >> $GITHUB_OUTPUT

      - name: Load SSH key into agent
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Harden Droplet SSH
        run: |
          IP="${{ steps.droplet_ip.outputs.ip }}"
          echo "Using Droplet IP: $IP"

          echo "Waiting for SSH to become available on $IP…"
          until ssh \
            -o BatchMode=yes \
            -o ConnectTimeout=5 \
            -o StrictHostKeyChecking=no \
            root@"$IP" 'echo ✓' &>/dev/null; do
            echo "  still waiting…"
            sleep 5
          done

          ssh -o StrictHostKeyChecking=no root@"$IP" 'bash -s' < scripts/harden_ssh.sh

      - name: Setup UFW
        run: |
          ssh -o StrictHostKeyChecking=no deployer@"$IP" 'sudo bash -s' < scripts/setup_ufw.sh

      - name: Setup Fail2ban
        run: |
          ssh -o StrictHostKeyChecking=no deployer@"$IP" 'sudo bash -s' < scripts/setup_fail2ban.sh
